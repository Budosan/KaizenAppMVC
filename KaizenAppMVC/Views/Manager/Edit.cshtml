@model KaizenAppMVC.Models.ManagerEditModel

@{
    ViewBag.Title = "Edit";
}



<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <h4>ManagerEditModel</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.DepartmentID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DepartmentID)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.DepartmentName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DepartmentName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DepartmentManager)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DepartmentManager)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ManagerEmail)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ManagerEmail)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ManagerUsername)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ManagerUsername)
            </dd>

        </dl>
    </div>

    <div class="form-horizontal">
        <h4>ManagerEditModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DepartmentID)

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentManager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartmentManager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartmentManager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerUsername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerUsername, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerUsername, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" onclick="myFunction()" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
