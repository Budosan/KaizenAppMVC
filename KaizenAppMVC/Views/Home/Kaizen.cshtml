@model KaizenAppMVC.Models.KaizenModel

@{
    ViewBag.Title = "Kaizen";
}

<meta http-equiv="x-ua-compatible" content="IE=11">
<script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.11.0/sweetalert2.all.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.11.0/sweetalert2.min.css" />




<h2>Kaizen Predlog</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <button type="button" class="btn btn-default" data-toggle="collapse" data-target="#collapse" aria-expanded="false" aria-controls="collapse">
            Unesi podatke za nekog drugog
        </button>

        <div id="collapse" class="collapse">

            <div class="jumbotron">
                <span class="badge badge-info" style="background-color:deepskyblue" onclick="podatciRadnika()">Info</span>
                <div class="form-group">

                    @Html.LabelFor(model => model.WorkerID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkerID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WorkerID, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.WorkerName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WorkerName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.WorkerLastname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WorkerLastname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WorkerLastname, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <hr />
        <span class="badge badge-info" style="background-color:deepskyblue" onclick="kaizenSuggestion()">Info</span>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @Html.LabelFor(model => model.KaizenSuggestion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="Req">
                @Html.EditorFor(model => model.KaizenSuggestion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KaizenSuggestion, "", new { @class = "text-danger" })

            </div>
        </div>
        <span class="badge badge-info" style="background-color:deepskyblue" onclick="kaizenSolution()">Info</span>
        <div class="form-group">

            @Html.LabelFor(model => model.KaizenSolution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="Req">
                @Html.TextAreaFor(model => model.KaizenSolution, 10, 500, new { htmlAttributes = new { @class = "form-control", style = "margin: 0px; width: 570px; height: 165px;" } })
                @Html.ValidationMessageFor(model => model.KaizenSolution, "", new { @class = "text-danger" })

            </div>
        </div>
        <span class="badge badge-info" style="background-color:deepskyblue" onclick="departmentInfo()">Info</span>
        <div class="form-group">

            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Department,
                    new SelectList(Enum.GetValues(typeof(Department))),
                    "Izaberi Department", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">




            <div class="col-md-10">


            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" id="save" onclick="myFunction()" class="btn btn-default" />

            </div>
        </div>
    </div>
    <script>
        function myFunction() {
            var x = document.getElementById("KaizenSolution").value;
            var y = document.getElementById("KaizenSuggestion").value;
            var z = document.getElementById("Department").value;

            if (x != null && x != '' && y != null && y != '' && z != null && z != '') {
                swal(
                    'Uspešno popunjeno!',
                    'Kaizen predlog je poslat!',
                    'success'
                )
            };

        };
        function kaizenSuggestion() {
            swal(
                'Ovo polje mora biti popunjeno!',
                'Potrebno je upisati kratak tekst koji se odnosi na Kazien predlog(u vezi čega je, šta se može unaprediti i tome slično)',
                'info'
            )
        };
        function kaizenSolution() {
            swal(
                'Ovo polje mora biti popunjeno!',
                'Potrebno je upisati detaljan opis ideje ili predloga koji imate',
                'info'
            )
        };
        function podatciRadnika() {
            swal(
                'Ovo polje mora biti popunjeno!',
                'Ukoliko Kaizen ideju hoće da podnese radnik koji nema svoj nalog ovde možete upisati njegovo ime, prezime i ID',
                'info'
            )
        };

        function departmentInfo() {
            swal(
                'Ovo polje mora biti popunjeno!',
                'Sa liste je potrebno izabrati sektor-department kome je namenja ideja za unapređenje. Prema odabiru sektora odgovorno lice za kaizen tog sektora biće obavešteno putem email-a o podnošenju vašeg zahteva. Ukoliko niste sigurni kom departmentu treba da uputite zahtev izaberite department CI',
                'info'
            )
        }


    </script>







}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
